#include<bits/stdc++.h>
#define bit(mask, i) ((mask >> i) & 1)

using namespace std;

int f[100001][20];

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);
	int n;
	cin >> n;
	int a[n + 1][n + 1];
	for(int i = 0; i < n ; ++i) {
		for(int j = 0 ; j < n; ++j) {
			cin >> a[i][j];
		}
	}
	for(int mask = 1; mask < (1 << n); ++mask) {
		if(__builtin_popcount(mask) == 1) {
			continue;
		} else {
			for(int i = 0; i < n; ++i) {
				if(bit(mask, i)) {
					f[mask][i] = 1e9;
					int pre_mask = mask & (~(1 << i));
					for(int j = 0; j < n; ++j) {
						if(bit(pre_mask, j)) {
							f[mask][i] = min(f[mask][i], f[pre_mask][j] + a[j][i]);
						}
					}
				}
			}
		}
	}
	int res = 1e9;
	for(int i = 0; i < n; ++i) {
		res = min(res, f[(1 << n) - 1][i]);
	}
	cout << res;
}
